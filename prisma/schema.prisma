// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id           Int     @id @default(autoincrement())
  name         String
  email        String  @unique
  phone        String?
  photoURL     String?
  details      Json?
  refreshToken String? @db.Text
  publicKey    String?
  secretKey    String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  Category Category[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  adminId Int
  Admin   Admin @relation(fields: [adminId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  Item Item[]
}

model Item {
  id      Int     @id @default(autoincrement())
  name    String
  picture String?
  price   Int?
  status  String?

  categoryId Int
  Category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Lot {
  id        Int     @id @default(autoincrement())
  amount    Int?
  status    String?
  orders    Json
  employees Json

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Employee {
  id           Int     @id @default(autoincrement())
  name         String
  email        String  @unique
  phone        String?
  photoURL     String?
  details      Json?
  refreshToken String? @db.Text
  publicKey    String?
  secretKey    String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Order {
  id Int @id @default(autoincrement())

  lotId Int
  items Json

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}
